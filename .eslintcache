[{"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/index.js":"1","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/App.js":"2","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/store/UserStore.js":"3","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/store/DeviceStore.js":"4","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/AppRouter.js":"5","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/http/userAPI.js":"6","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/NavBar.js":"7","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/routes.js":"8","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/http/index.js":"9","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/utils/consts.js":"10","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/DevicePage.js":"11","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Auth.js":"12","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Shop.js":"13","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Basket.js":"14","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Admin.js":"15","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/http/deviceAPI.js":"16","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/Pages.js":"17","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/DeviceList.js":"18","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/BrandBar.js":"19","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/TypeBar.js":"20","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateType.js":"21","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateBrand.js":"22","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateDevice.js":"23","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/DeviceItem.js":"24","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Champ.js":"25","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateUserdata.js":"26"},{"size":439,"mtime":1618311565789,"results":"27","hashOfConfig":"28"},{"size":1311,"mtime":1619535715739,"results":"29","hashOfConfig":"28"},{"size":539,"mtime":1619443950604,"results":"30","hashOfConfig":"28"},{"size":1298,"mtime":1619305674682,"results":"31","hashOfConfig":"28"},{"size":795,"mtime":1618311565785,"results":"32","hashOfConfig":"28"},{"size":1662,"mtime":1619443892249,"results":"33","hashOfConfig":"28"},{"size":4300,"mtime":1619444208274,"results":"34","hashOfConfig":"28"},{"size":893,"mtime":1619302409647,"results":"35","hashOfConfig":"28"},{"size":407,"mtime":1618311565789,"results":"36","hashOfConfig":"28"},{"size":267,"mtime":1619302409647,"results":"37","hashOfConfig":"28"},{"size":2333,"mtime":1619305495369,"results":"38","hashOfConfig":"28"},{"size":3142,"mtime":1619302409647,"results":"39","hashOfConfig":"28"},{"size":1538,"mtime":1619535463694,"results":"40","hashOfConfig":"28"},{"size":146,"mtime":1619261220152,"results":"41","hashOfConfig":"28"},{"size":2076,"mtime":1619444383370,"results":"42","hashOfConfig":"28"},{"size":1218,"mtime":1619302409643,"results":"43","hashOfConfig":"28"},{"size":801,"mtime":1618856333831,"results":"44","hashOfConfig":"28"},{"size":478,"mtime":1619302409643,"results":"45","hashOfConfig":"28"},{"size":759,"mtime":1618311565785,"results":"46","hashOfConfig":"28"},{"size":713,"mtime":1619298969640,"results":"47","hashOfConfig":"28"},{"size":1299,"mtime":1619377535768,"results":"48","hashOfConfig":"28"},{"size":1323,"mtime":1619377583259,"results":"49","hashOfConfig":"28"},{"size":7114,"mtime":1619442850155,"results":"50","hashOfConfig":"28"},{"size":1311,"mtime":1619527875215,"results":"51","hashOfConfig":"28"},{"size":1311,"mtime":1619437464791,"results":"52","hashOfConfig":"28"},{"size":6251,"mtime":1619443894525,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1u5roi7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/index.js",[],["116","117"],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/App.js",["118","119","120","121"],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/store/UserStore.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/store/DeviceStore.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/AppRouter.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/http/userAPI.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/NavBar.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/routes.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/http/index.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/utils/consts.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/DevicePage.js",["122","123"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneDevice} from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        {/*<h2>{device.name}</h2>*/}\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {/*{device.rating}*/}\n                            {device.price}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h2>{device.name}</h2>\n                        {/*<h3>От: {device.price} руб.</h3>*/}\n                        {/*<Button variant={\"outline-dark\"}>Добавить в корзину</Button>*/}\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Для связи:</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Auth.js",["124"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Shop.js",["125","126"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {device} = useContext(Context)\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        fetchDevices(null, null, 1, 9).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchDevices(device.selectedType.id, device.selectedBrand.id,  device.page, 9).then(data => {\n            device.setDevices(data.rows)\n            device.setTotalCount(data.count)\n        })\n    }, [device.page, device.selectedType, device.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <DeviceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Basket.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Admin.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/http/deviceAPI.js",["127"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\n// export const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n//     const {data} = await $host.get('api/device', {params: {\n//             typeId, brandId, page, limit\n//         }})\n//     return data\n// }\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 9) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/Pages.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/DeviceList.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/BrandBar.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/TypeBar.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateType.js",[],"/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateBrand.js",["128"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Add map\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Add map\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateDevice.js",["129","130","131","132","133","134"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {check} from \"../../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const {user} = useContext(Context)\n\n    // const {device} = useContext(Context)\n    // const [name, setName] = useState('')\n    // const [price, setPrice] = useState(0)\n    // const [file, setFile] = useState(null)\n    // const [info, setInfo] = useState([])\n    // const {user} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n        // check().then(data => user.setUser(data))\n    }, [])\n\n    // const addInfo = () => {\n    //     setInfo([...info, {title: '', description: '', number: Date.now()}])\n    // }\n    // const removeInfo = (number) => {\n    //     setInfo(info.filter(i => i.number !== number))\n    // }\n    // const changeInfo = (key, value, number) => {\n    //     setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    // }\n\n    // const selectFile = e => {\n    //     setFile(e.target.files[0])\n    // }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('userId', user.user.id)\n        // formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    // const addDevice = () => {\n    //     const formData = new FormData()\n    //     formData.append('name', name)\n    //     formData.append('price', `${price}`)\n    //     formData.append('img', file)\n    //     formData.append('brandId', device.selectedBrand.id)\n    //     formData.append('typeId', device.selectedType.id)\n    //     formData.append('userId', user.user.id)\n    //     formData.append('info', JSON.stringify(info))\n    //     createDevice(formData).then(data => onHide())\n    // }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    {/*<Form.Control*/}\n                    {/*    value={name}*/}\n                    {/*    onChange={e => setName(e.target.value)}*/}\n                    {/*    className=\"mt-3\"*/}\n                    {/*    placeholder=\"Введите название устройства\"*/}\n                    {/*/>*/}\n                    {/*<Form.Control*/}\n                    {/*    value={price}*/}\n                    {/*    onChange={e => setPrice(Number(e.target.value))}*/}\n                    {/*    className=\"mt-3\"*/}\n                    {/*    placeholder=\"Введите стоимость устройства\"*/}\n                    {/*    type=\"number\"*/}\n                    {/*/>*/}\n                    {/*<Form.Control*/}\n                    {/*    className=\"mt-3\"*/}\n                    {/*    type=\"file\"*/}\n                    {/*    onChange={selectFile}*/}\n                    {/*/>*/}\n                    <hr/>\n                    {/*<Button*/}\n                    {/*    variant={\"outline-dark\"}*/}\n                    {/*    onClick={addInfo}*/}\n                    {/*>*/}\n                    {/*    Добавить новое свойство*/}\n                    {/*</Button>*/}\n                    {/*{info.map(i =>*/}\n                    {/*    <Row className=\"mt-4\" key={i.number}>*/}\n                    {/*        <Col md={4}>*/}\n                    {/*            <Form.Control*/}\n                    {/*                value={i.title}*/}\n                    {/*                onChange={(e) => changeInfo('title', e.target.value, i.number)}*/}\n                    {/*                placeholder=\"Введите название свойства\"*/}\n                    {/*            />*/}\n                    {/*        </Col>*/}\n                    {/*        <Col md={4}>*/}\n                    {/*            <Form.Control*/}\n                    {/*                value={i.description}*/}\n                    {/*                onChange={(e) => changeInfo('description', e.target.value, i.number)}*/}\n                    {/*                placeholder=\"Введите описание свойства\"*/}\n                    {/*            />*/}\n                    {/*        </Col>*/}\n                    {/*        <Col md={4}>*/}\n                    {/*            <Button*/}\n                    {/*                onClick={() => removeInfo(i.number)}*/}\n                    {/*                variant={\"outline-danger\"}*/}\n                    {/*            >*/}\n                    {/*                Удалить*/}\n                    {/*            </Button>*/}\n                    {/*        </Col>*/}\n                    {/*    </Row>*/}\n                    {/*)}*/}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/DeviceItem.js",["135","136"],"import React, {useEffect} from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport {useHistory} from \"react-router-dom\"\nimport {DEVICE_ROUTE} from \"../utils/consts\";\nimport {getOneUser} from \"../http/userAPI\";\n\nconst DeviceItem = ({device}) => {\n\n    // const[user, setUsers] = React.useState([])\n    // useEffect(() => {\n    //     getOneUser(device.userId).then(data => setUsers(data))\n    // }, [])\n\n    const history = useHistory()\n    return (\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n                {/*<Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>*/}\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n                    <div>{device.name}</div>\n                    <div className=\"d-flex align-items-center\">\n                        <div>{device.userId}</div>\n                        <Image width={18} height={18} src={star}/>\n                    </div>\n                </div>\n               {/*<div>{user}</div>*/}\n            </Card>\n        </Col>\n    );\n};\n\nexport default DeviceItem;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/pages/Champ.js",["137","138","139","140"],"import React, {useState, useEffect, useContext} from 'react';\nimport {Button, Container} from \"react-bootstrap\";\nimport CreateBrand from \"../components/modals/CreateBrand\";\nimport CreateType from \"../components/modals/CreateType\";\nimport {Context} from \"../index\";\nimport {check} from \"../http/userAPI\"\n\nconst Champ = () => {\n\n    // const {user} = useContext(Context)\n    //\n    // useEffect(() => {\n    //     check().then(data => user.setUser(data))\n    // }, [])\n\n    const [brandVisible, setBrandVisible] = useState(false)\n    const [typeVisible, setTypeVisible] = useState(false)\n\n    return (\n        <Container className=\"d-flex flex-column\">\n            <Button\n                variant={\"outline-dark\"}\n                className=\"mt-4 p-2\"\n                onClick={() => setTypeVisible(true)}\n            >\n                Add date championship\n            </Button>\n            <Button\n                variant={\"outline-dark\"}\n                className=\"mt-4 p-2\"\n                onClick={() => setBrandVisible(true)}\n            >\n                Add map\n            </Button>\n\n            <CreateBrand show={brandVisible} onHide={() => setBrandVisible(false)}/>\n            <CreateType show={typeVisible} onHide={() => setTypeVisible(false)}/>\n\n        </Container>\n    );\n};\n\nexport default Champ;\n","/home/navatar/IdeaProjects/GitCloneShop/FRONTEND-REACT-SHOP/src/components/modals/CreateUserdata.js",["141","142","143","144","145"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {check, createUserdata} from \"../../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateUserdata = observer(({show, onHide}) => {\n\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [rating, setRating] = useState('')\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n    const {user} = useContext(Context)\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addUserdata = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('rating', `${rating}`)\n        formData.append('img', file)\n        formData.append('userId', user.user.id)\n        formData.append('info', JSON.stringify(info))\n        createUserdata(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    {/*<Dropdown className=\"mt-2 mb-2\">*/}\n                    {/*    <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>*/}\n                    {/*    <Dropdown.Menu>*/}\n                    {/*        {device.types.map(type =>*/}\n                    {/*            <Dropdown.Item*/}\n                    {/*                onClick={() => device.setSelectedType(type)}*/}\n                    {/*                key={type.id}*/}\n                    {/*            >*/}\n                    {/*                {type.name}*/}\n                    {/*            </Dropdown.Item>*/}\n                    {/*        )}*/}\n                    {/*    </Dropdown.Menu>*/}\n                    {/*</Dropdown>*/}\n                    {/*<Dropdown className=\"mt-2 mb-2\">*/}\n                    {/*    <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>*/}\n                    {/*    <Dropdown.Menu>*/}\n                    {/*        {device.brands.map(brand =>*/}\n                    {/*            <Dropdown.Item*/}\n                    {/*                onClick={() => device.setSelectedBrand(brand)}*/}\n                    {/*                key={brand.id}*/}\n                    {/*            >*/}\n                    {/*                {brand.name}*/}\n                    {/*            </Dropdown.Item>*/}\n                    {/*        )}*/}\n                    {/*    </Dropdown.Menu>*/}\n                    {/*</Dropdown>*/}\n\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Inter name Heroes Hota\"\n                    />\n                    <Form.Control\n                        value={rating}\n                        onChange={e => setRating(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Inter rate Heroes Hota\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addUserdata}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateUserdata;\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":7,"column":16,"nodeType":"152","messageId":"153","endLine":7,"endColumn":24},{"ruleId":"150","severity":1,"message":"154","line":9,"column":9,"nodeType":"152","messageId":"153","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"155","line":9,"column":22,"nodeType":"152","messageId":"153","endLine":9,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":31,"column":8,"nodeType":"158","endLine":31,"endColumn":10,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"160","line":2,"column":9,"nodeType":"152","messageId":"153","endLine":2,"endColumn":15},{"ruleId":"156","severity":1,"message":"161","line":12,"column":8,"nodeType":"158","endLine":12,"endColumn":10,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"163","line":26,"column":17,"nodeType":"152","messageId":"153","endLine":26,"endColumn":21},{"ruleId":"156","severity":1,"message":"164","line":22,"column":8,"nodeType":"158","endLine":22,"endColumn":10,"suggestions":"165"},{"ruleId":"156","severity":1,"message":"164","line":29,"column":8,"nodeType":"158","endLine":29,"endColumn":65,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"167","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"168","line":4,"column":22,"nodeType":"152","messageId":"153","endLine":4,"endColumn":32},{"ruleId":"150","severity":1,"message":"169","line":1,"column":39,"nodeType":"152","messageId":"153","endLine":1,"endColumn":47},{"ruleId":"150","severity":1,"message":"170","line":3,"column":33,"nodeType":"152","messageId":"153","endLine":3,"endColumn":36},{"ruleId":"150","severity":1,"message":"171","line":3,"column":38,"nodeType":"152","messageId":"153","endLine":3,"endColumn":41},{"ruleId":"150","severity":1,"message":"172","line":5,"column":36,"nodeType":"152","messageId":"153","endLine":5,"endColumn":48},{"ruleId":"150","severity":1,"message":"173","line":6,"column":9,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"156","severity":1,"message":"164","line":24,"column":8,"nodeType":"158","endLine":24,"endColumn":10,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"175","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"176","line":7,"column":9,"nodeType":"152","messageId":"153","endLine":7,"endColumn":19},{"ruleId":"150","severity":1,"message":"175","line":1,"column":26,"nodeType":"152","messageId":"153","endLine":1,"endColumn":35},{"ruleId":"150","severity":1,"message":"177","line":1,"column":37,"nodeType":"152","messageId":"153","endLine":1,"endColumn":47},{"ruleId":"150","severity":1,"message":"178","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"173","line":6,"column":9,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"150","severity":1,"message":"179","line":3,"column":17,"nodeType":"152","messageId":"153","endLine":3,"endColumn":25},{"ruleId":"150","severity":1,"message":"180","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":21},{"ruleId":"150","severity":1,"message":"172","line":5,"column":36,"nodeType":"152","messageId":"153","endLine":5,"endColumn":48},{"ruleId":"150","severity":1,"message":"173","line":6,"column":9,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"156","severity":1,"message":"164","line":21,"column":8,"nodeType":"158","endLine":21,"endColumn":10,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'userRole' is defined but never used.","Identifier","unusedVar","'fetchBrands' is defined but never used.","'fetchTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["185"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["186"],["187"],"'jwt_decode' is defined but never used.","'createType' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'fetchDevices' is defined but never used.","'check' is defined but never used.",["188"],"'useEffect' is defined but never used.","'getOneUser' is defined but never used.","'useContext' is defined but never used.","'Context' is defined but never used.","'Dropdown' is defined but never used.","'createDevice' is defined but never used.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"194","fix":"198"},{"desc":"194","fix":"199"},"Update the dependencies array to be: [user]",{"range":"200","text":"201"},"Update the dependencies array to be: [id]",{"range":"202","text":"203"},"Update the dependencies array to be: [device]",{"range":"204","text":"205"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"206","text":"207"},{"range":"208","text":"205"},{"range":"209","text":"205"},[1092,1094],"[user]",[457,459],"[id]",[874,876],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[979,981],[850,852]]